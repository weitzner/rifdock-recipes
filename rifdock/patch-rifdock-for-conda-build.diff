diff --git a/CMakeLists.txt b/CMakeLists.txt
index 298a4f1..2079403 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -36,6 +36,11 @@ else()
 	message( FATAL_ERROR "bad CXX_STD ${CXX_STD}" )
 endif()
 
+if (CMAKE_CXX_COMPILER_ID MATCHES "Clang")
+  add_definitions( -DUNUSUAL_ALLOCATOR_DECLARATION )
+  set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++" )
+endif()
+
 string(TOUPPER "${CMAKE_BUILD_TYPE}" U_CMAKE_BUILD_TYPE)
 if( ${U_CMAKE_BUILD_TYPE} MATCHES DEBUG )
 
diff --git a/apps/rosetta/CMakeLists.txt b/apps/rosetta/CMakeLists.txt
index a484918..27890aa 100644
--- a/apps/rosetta/CMakeLists.txt
+++ b/apps/rosetta/CMakeLists.txt
@@ -22,7 +22,12 @@ include_directories( ${ROSETTA_SRC}/src )
 include_directories( ${ROSETTA_SRC}/external/include )
 include_directories( ${ROSETTA_SRC}/external/dbio )
 include_directories( ${ROSETTA_SRC}/external/boost_1_55_0 )
-include_directories( ${ROSETTA_SRC}/src/platform/linux )
+if(APPLE)
+	include_directories( ${ROSETTA_SRC}/src/platform/macos )
+else()
+	include_directories( ${ROSETTA_SRC}/src/platform/linux )
+endif()
+
 include_directories( . )
 
 
@@ -30,11 +35,12 @@ SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DBOOST_ERROR_CODE_HEADER_ONLY -DBOOST_
 SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DCXX11 -DPTR_STD" )
 SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DMULTI_THREADED" )
 
-add_subdirectory( python )
 
 # this omp shit breaks python bindings! do it after
 SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_OPENMP -fopenmp" )
-LIST( APPEND ALL_ROSETTA_LIBS gomp )
+if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
+	LIST( APPEND ALL_ROSETTA_LIBS gomp )
+endif()
 
 if ( ${USEHDF5} )
     FIND_PACKAGE(HDF5 REQUIRED COMPONENTS C CXX HL)
@@ -46,7 +52,7 @@ endif()
 
 add_subdirectory( riflib )
 
-set( EXES "test_librosetta" "rifgen" "rif_dock_test" "scheme_make_bounding_grids" )
+set( EXES "rifgen" "rif_dock_test" )
 foreach( EXE ${EXES} )
 	message( "riflib exe: " ${EXE} )
 
diff --git a/apps/rosetta/rif_dock_test.cc b/apps/rosetta/rif_dock_test.cc
index 7b44614..1d1c859 100644
--- a/apps/rosetta/rif_dock_test.cc
+++ b/apps/rosetta/rif_dock_test.cc
@@ -38,7 +38,13 @@
 	#include <riflib/util_complex.hh>
 
 	// #include <numeric/alignment/QCP_Kernel.hh>
+	#ifdef UNUSUAL_ALLOCATOR_DECLARATION
+	#include <experimental/algorithm>
+	#include <queue>
+	#else
 	#include <parallel/algorithm>
+	#endif
+
 	#include <exception>
 	#include <stdexcept>
 
diff --git a/apps/rosetta/rifgen.cc b/apps/rosetta/rifgen.cc
index f34c75f..496d919 100644
--- a/apps/rosetta/rifgen.cc
+++ b/apps/rosetta/rifgen.cc
@@ -51,7 +51,13 @@ remove some or all modifications to residues, and/or remap res numbers? fix hbon
 	#include <riflib/rif/RifGeneratorUserHotspots.hh>
 
 	#include <map>
+
+	#ifdef UNUSUAL_ALLOCATOR_DECLARATION
+	#include <experimental/algorithm>
+	#include <queue>
+	#else
 	#include <parallel/algorithm>
+	#endif
 
 	#include <scheme/chemical/RotamerIndex.hh>
 	#include <scheme/objective/hash/XformMap.hh>
diff --git a/apps/rosetta/riflib/BurialManager.cc b/apps/rosetta/riflib/BurialManager.cc
index be22d5a..af180a7 100644
--- a/apps/rosetta/riflib/BurialManager.cc
+++ b/apps/rosetta/riflib/BurialManager.cc
@@ -95,7 +95,7 @@ inline core::Real calculate_point_in_cone(
     if ( angle_term < 0 ) {
         angle_term = 0.0;
     }
-    return (dist_term * std::pow<float>(angle_term, angle_exponent) );
+    return (dist_term * std::pow<core::Real>(angle_term, angle_exponent) );
 }
 
 
diff --git a/apps/rosetta/riflib/RifFactory.cc b/apps/rosetta/riflib/RifFactory.cc
index dba95b3..3028afb 100644
--- a/apps/rosetta/riflib/RifFactory.cc
+++ b/apps/rosetta/riflib/RifFactory.cc
@@ -215,6 +215,9 @@ public:
 
 	void finalize_rif() override {
 		// sort the rotamers in each cell so best scoring is first
+		#ifdef UNUSUAL_ALLOCATOR_DECLARATION
+			namespace __gnu_parallel = std;
+		#endif
 		__gnu_parallel::for_each( xmap_ptr_->map_.begin(), xmap_ptr_->map_.end(), call_sort_rotamers<typename XMap::Map::value_type> );
 	}
 
@@ -1456,7 +1459,7 @@ std::string get_rif_type_from_file( std::string fname )
 				return 0.0;
 			}
 
-			const bool want_sats = scratch.burial_manager_;
+			const bool want_sats = scratch.burial_manager_ != nullptr;
 
 			typename RIF::Value const & rotscores = rif_->operator[]( bb.position() );
 			static int const Nrots = RIF::Value::N;
@@ -1615,7 +1618,7 @@ std::string get_rif_type_from_file( std::string fname )
 				for( int irot : always_available_rotamers_ ){
 					float const irot1be = (*scratch.rotamer_energies_1b_).at(ires).at(irot);
 					if( irot1be > packopts_.rotamer_onebody_inclusion_threshold ) continue;
-					const bool want_sats = scratch.burial_manager_;
+					const bool want_sats = scratch.burial_manager_ != nullptr;
 					int sat1 = -1, sat2 = -1, hbcount = 0;
 					float const recalc_rot_v_tgt = rot_tgt_scorer_.score_rotamer_v_target_sat( 
 																		irot, bb.position(), sat1, sat2, want_sats, hbcount, 10.0, 4 );
diff --git a/apps/rosetta/riflib/RifFactory.hh b/apps/rosetta/riflib/RifFactory.hh
index 26eb759..868d237 100644
--- a/apps/rosetta/riflib/RifFactory.hh
+++ b/apps/rosetta/riflib/RifFactory.hh
@@ -30,7 +30,12 @@
 #include <boost/any.hpp>
 #include <boost/foreach.hpp>
 
+#ifdef UNUSUAL_ALLOCATOR_DECLARATION
+#include <experimental/algorithm>
+#include <queue>
+#else
 #include <parallel/algorithm>
+#endif
 
 namespace scheme { namespace search { struct HackPackOpts; }}
 
diff --git a/apps/rosetta/riflib/rif/RifGeneratorApoHSearch.cc b/apps/rosetta/riflib/rif/RifGeneratorApoHSearch.cc
index debdbf2..0a0a5c4 100644
--- a/apps/rosetta/riflib/rif/RifGeneratorApoHSearch.cc
+++ b/apps/rosetta/riflib/rif/RifGeneratorApoHSearch.cc
@@ -55,7 +55,12 @@
 	#include <utility/io/ozstream.hh>
 	#include <utility/tools/make_vector1.hh>
 
+	#ifdef UNUSUAL_ALLOCATOR_DECLARATION
+	#include <experimental/algorithm>
+	#include <queue>
+	#else
 	#include <parallel/algorithm>
+	#endif
 
 	#include <boost/random/mersenne_twister.hpp>
 	#include <boost/random/uniform_real.hpp>
@@ -643,6 +648,9 @@ namespace rif {
 
 				SearchPoint max_pt, min_pt;
 				int64_t len = samples[r].size();
+				#ifdef UNUSUAL_ALLOCATOR_DECLARATION
+					namespace __gnu_parallel = std;
+				#endif
 				if( samples[r].size() > beam_size/DIMPOW2 ){
 					__gnu_parallel::nth_element( samples[r].begin(), samples[r].begin()+beam_size/DIMPOW2, samples[r].end() );
 					len = beam_size/DIMPOW2;
diff --git a/apps/rosetta/riflib/rif/make_hbond_geometries.cc b/apps/rosetta/riflib/rif/make_hbond_geometries.cc
index 79627ad..7c11666 100644
--- a/apps/rosetta/riflib/rif/make_hbond_geometries.cc
+++ b/apps/rosetta/riflib/rif/make_hbond_geometries.cc
@@ -45,7 +45,12 @@
 	#include <riflib/util.hh>
 
 	#include <map>
+	#ifdef UNUSUAL_ALLOCATOR_DECLARATION
+	#include <experimental/algorithm>
+	#include <queue>
+	#else
 	#include <parallel/algorithm>
+	#endif
 
 	#include <scheme/actor/Atom.hh>
 	#include <scheme/actor/BackboneActor.hh>
@@ -310,4 +315,4 @@ void make_hbond_geometries(
 
 }
 }
-}
\ No newline at end of file
+}
diff --git a/apps/rosetta/riflib/rifdock_tasks/CompileAndFilterResultsTasks.cc b/apps/rosetta/riflib/rifdock_tasks/CompileAndFilterResultsTasks.cc
index 1e7d3a3..0e2aa36 100644
--- a/apps/rosetta/riflib/rifdock_tasks/CompileAndFilterResultsTasks.cc
+++ b/apps/rosetta/riflib/rifdock_tasks/CompileAndFilterResultsTasks.cc
@@ -170,7 +170,7 @@ awful_compile_output_helper_(
                         selected_xforms.push_back( XRtriple {
                             xposition1, 
                             sp.index,
-                            (int64_t)selected_results.size()
+                            static_cast<uint64_t>(selected_results.size())
                         } );
                     }
                     r.rotamers_ = sp.rotamers_;
@@ -315,6 +315,9 @@ CompileAndFilterResultsTask::return_rif_dock_results(
             allresults.push_back( r );
         }
     }
+    #ifdef UNUSUAL_ALLOCATOR_DECLARATION
+        namespace __gnu_parallel = std;
+    #endif
     __gnu_parallel::sort( allresults.begin(), allresults.end() );
 
 
diff --git a/apps/rosetta/riflib/rifdock_tasks/HSearchTasks.cc b/apps/rosetta/riflib/rifdock_tasks/HSearchTasks.cc
index 52865a7..05fc797 100644
--- a/apps/rosetta/riflib/rifdock_tasks/HSearchTasks.cc
+++ b/apps/rosetta/riflib/rifdock_tasks/HSearchTasks.cc
@@ -251,6 +251,9 @@ HSearchFilterSortTask::return_search_points(
     SearchPoint max_pt, min_pt;
     int64_t len = search_points.size();
     uint64_t keeping = num_to_keep_ * pd.beam_multiplier;
+    #ifdef UNUSUAL_ALLOCATOR_DECLARATION
+       namespace __gnu_parallel = std;
+    #endif
     if( search_points.size() > keeping ){
         __gnu_parallel::nth_element( search_points.begin(), search_points.begin()+ keeping, search_points.end() );
         len = keeping;
@@ -288,6 +291,9 @@ HSearchScaleToReslTask::return_search_points(
         int num_resls = target_resl_ - current_resl_;
 
         int use_pow2 = 1;
+        #ifdef UNUSUAL_ALLOCATOR_DECLARATION
+            namespace __gnu_parallel = std;
+        #endif
         for ( int i = 0; i < num_resls; i++) {
             use_pow2 *= DIMPOW2_;
         }
@@ -359,6 +365,9 @@ HSearchFinishTask::return_search_points(
 
     std::vector<SearchPoint> & search_points = *search_points_p;
 
+    #ifdef UNUSUAL_ALLOCATOR_DECLARATION
+        namespace __gnu_parallel = std;
+    #endif
     std::cout << "full sort of final samples" << std::endl;
     __gnu_parallel::sort( search_points.begin(), search_points.end() );
 
@@ -391,6 +400,9 @@ DumpHSearchFramesTask::return_search_points(
 
     uint64_t dump_every = std::floor( search_points_p->size() / dump_x_frames_per_resl_ );
 
+    #ifdef UNUSUAL_ALLOCATOR_DECLARATION
+        namespace __gnu_parallel = std;
+    #endif
     if ( dump_only_best_frames_ ) {
         dump_every = std::max( 1, dump_only_best_stride_ );
         __gnu_parallel::sort( search_points_p->begin(), search_points_p->end() );
diff --git a/apps/rosetta/riflib/rifdock_tasks/HackPackTasks.cc b/apps/rosetta/riflib/rifdock_tasks/HackPackTasks.cc
index 6e8b420..e85f93b 100644
--- a/apps/rosetta/riflib/rifdock_tasks/HackPackTasks.cc
+++ b/apps/rosetta/riflib/rifdock_tasks/HackPackTasks.cc
@@ -157,6 +157,9 @@ HackPackTask::return_search_point_with_rotss(
 
 
 
+    #ifdef UNUSUAL_ALLOCATOR_DECLARATION
+        namespace __gnu_parallel = std;
+    #endif
     std::cout << "full sort of packed samples" << std::endl;
     __gnu_parallel::sort( packed_results.begin(), packed_results.end() );
 
diff --git a/apps/rosetta/riflib/rifdock_tasks/RosettaScoreAndMinTasks.cc b/apps/rosetta/riflib/rifdock_tasks/RosettaScoreAndMinTasks.cc
index 33d88ed..aa70679 100644
--- a/apps/rosetta/riflib/rifdock_tasks/RosettaScoreAndMinTasks.cc
+++ b/apps/rosetta/riflib/rifdock_tasks/RosettaScoreAndMinTasks.cc
@@ -552,6 +552,9 @@ rosetta_score_inner(
     if( exception ) std::rethrow_exception(exception);
 
     cout << endl;
+    #ifdef UNUSUAL_ALLOCATOR_DECLARATION
+        namespace __gnu_parallel = std;
+    #endif
     __gnu_parallel::sort( packed_results.begin(), packed_results.end() );
     {
         size_t n_scormin = 0;
diff --git a/apps/rosetta/riflib/rifdock_tasks/SasaTasks.cc b/apps/rosetta/riflib/rifdock_tasks/SasaTasks.cc
index 0920d5a..175142e 100644
--- a/apps/rosetta/riflib/rifdock_tasks/SasaTasks.cc
+++ b/apps/rosetta/riflib/rifdock_tasks/SasaTasks.cc
@@ -149,6 +149,9 @@ SortByScorePer1000SasaTask::return_any_points(
 
     ScorePer1000SasaComparator comparator;
 
+    #ifdef UNUSUAL_ALLOCATOR_DECLARATION
+        namespace __gnu_parallel = std;
+    #endif
     __gnu_parallel::sort( any_points->begin(), any_points->end(), comparator );
 
 
diff --git a/apps/rosetta/riflib/rifdock_tasks/UtilTasks.cc b/apps/rosetta/riflib/rifdock_tasks/UtilTasks.cc
index 302ba8e..657c99b 100644
--- a/apps/rosetta/riflib/rifdock_tasks/UtilTasks.cc
+++ b/apps/rosetta/riflib/rifdock_tasks/UtilTasks.cc
@@ -58,6 +58,9 @@ SortByScoreTask::return_any_points(
     RifDockData & rdd, 
     ProtocolData & pd ) {
 
+    #ifdef UNUSUAL_ALLOCATOR_DECLARATION
+        namespace __gnu_parallel = std;
+    #endif
     __gnu_parallel::sort( any_points->begin(), any_points->end() );
 
     return any_points;
@@ -295,6 +298,9 @@ FilterByBiggestBlocksFracTask::return_any_points(
         keys.push_back(pair.first);
         sizes.push_back(pair.second.size());
     }
+    #ifdef UNUSUAL_ALLOCATOR_DECLARATION
+        namespace __gnu_parallel = std;
+    #endif
     __gnu_parallel::sort( sizes.begin(), sizes.end() );
 
     size_t last_index = int( std::floor ( (1 - frac_) * sizes.size() ) );
diff --git a/apps/rosetta/riflib/util.hh b/apps/rosetta/riflib/util.hh
index b45e407..41d80b9 100644
--- a/apps/rosetta/riflib/util.hh
+++ b/apps/rosetta/riflib/util.hh
@@ -327,7 +327,7 @@ xform_pose(
 template<int N> 
 struct PRINT_SIZE_AS_ERROR
 { 
-   int operator()() { return (int)std::vector<int>(); } //deliberately causing error
+   int operator()() { return N + 256; } //deliberately causing error
 };
 
 
